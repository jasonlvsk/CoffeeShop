openapi: "1.0.0"
info:
  version: 1.0.0
  title: Awesome Coffee Shop
  license:
    name: UF
servers:
  - url: http://awesomecoffee.com
paths:
  /menu:
    get:
      summary: List the coffee menu
      operationId: listMenu
      tags:
        - menu
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A list of all menu items
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Menu"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a order
      operationId: placeOrder
      tags:
        - order
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
	'200':
          description: Successful order placed
        default:
          description: Order placed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderPlaced"
  /menu/{menuItemID}:
    get:
      summary: Information about a menu item, nutritional facts and ingredients
      operationId: getMenuItemDetails
      tags:
        - menu
      parameters:
        - name: menuItemID
          in: path
          required: true
          description: The id of menu item
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/itemID"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    menuItem:
      type: object
      required:
        - id
        - name
	- ingredients
	- nutritional facts
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
	ingredients:
	  type: string
	nutritional facts:
	  type: string
        tag:
          type: string
    Items:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/ItemID"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string